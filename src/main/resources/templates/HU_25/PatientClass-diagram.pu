@startuml hu25
package repository {
  interface PatientRepository {
    findByPerson_Name(String name): List<Patient>
  }

  interface JpaRepository {
    ~DynamycQueryAlgoritm
  }
}

package controller {
  class PatientController {
    +list(): List<Patient>
    +getById(id: Long): Patient
    +create(obj: PatientDTO): void
    +update(id: Long, obj: PatientDTO): void
    +delete(id: Long): void
  }
}

package service {

  class PatientService {
    +list(): List<Patient>
    +getOne(id: Long): Patient
    +save(obj: Patient): Patient
    +delete(id: Long): void
    +existsById(id: Long): boolean

  }

  interface CRUDService{
    +list(): List<T>
    +getOne(id: ID): Optional<T>
    +save(obj: T): void
    +delete(id: ID): void
    +existsById(id: ID): boolean
  }
}

package dto {
  class PatientDTO {
    -idPerson: Long
    -firstName: String
    -lastNameFather: String
    -lastNameMother: String
    -gender: Character
    -birthDate: Date
    -phone: String
    -dni: String
    -address: String
    -@lombok
  }
}

package entity {

  class Person {
    -idPerson: Long
    -firstName: String
    -lastNameFather: String
    -lastNameMother: String
    -gender: Character
    -birthDate: Date
    -phone: String
    -dni: String
    -address: String
    @lombok
  }
  class Patient {
    -idPatient: Long
    -personId: Long
    @lombok
  }

}








PatientController ..> PatientService : <<uses>>
PatientController --> PatientDTO : Receives as @RequestBody
PatientController ..> Patient : <<creates>>

PatientService..> PatientController: <<returns>>
PatientService --|> CRUDService
PatientService ..> PatientRepository : <<uses>>

PatientRepository --> PatientService : <<returns>>
PatientRepository --> Patient : <<returns>>
PatientRepository --|> JpaRepository: <<implements>>

Patient }o--|| Person

@enduml
